{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\herb-traceability\\\\src\\\\components\\\\FarmerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\"; // library for QR code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FarmerForm({\n  onSubmit\n}) {\n  _s();\n  const [herb, setHerb] = useState(\"\");\n  const [location, setLocation] = useState(null);\n  const [submittedData, setSubmittedData] = useState(null);\n\n  // Get GPS location\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      setLocation({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n    });\n  };\n\n  // Submit herb details (no backend, just store locally)\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      herb,\n      location\n    };\n    setSubmittedData(data); // save data to show in QR\n    alert(\"‚úÖ Herb logged successfully!\");\n    if (onSubmit) onSubmit(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      background: '#f8fafc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        htmlFor: \"herb\",\n        children: \"Herb Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"herb\",\n        type: \"text\",\n        placeholder: \"e.g. Tulsi\",\n        value: herb,\n        onChange: e => setHerb(e.target.value),\n        className: \"input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8,\n          alignItems: 'center',\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: getLocation,\n          className: \"btn btn-secondary\",\n          children: \"Get Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), location && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"muted\",\n          children: [\"\\uD83D\\uDCCD Lat: \", location.lat, \", Lng: \", location.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: JSON.stringify(submittedData),\n        size: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerForm, \"FzRRF/bDc0C30HStxvAgLUmxSyE=\");\n_c = FarmerForm;\nexport default FarmerForm;\nvar _c;\n$RefreshReg$(_c, \"FarmerForm\");","map":{"version":3,"names":["React","useState","QRCodeCanvas","jsxDEV","_jsxDEV","FarmerForm","onSubmit","_s","herb","setHerb","location","setLocation","submittedData","setSubmittedData","getLocation","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","handleSubmit","e","preventDefault","data","alert","className","style","background","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","target","required","display","gap","alignItems","marginTop","onClick","JSON","stringify","size","_c","$RefreshReg$"],"sources":["C:/Users/DELL/herb-traceability/src/components/FarmerForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";  // library for QR code\r\n\r\nfunction FarmerForm({ onSubmit }) {\r\n  const [herb, setHerb] = useState(\"\");\r\n  const [location, setLocation] = useState(null);\r\n  const [submittedData, setSubmittedData] = useState(null);\r\n\r\n  // Get GPS location\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      setLocation({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      });\r\n    });\r\n  };\r\n\r\n  // Submit herb details (no backend, just store locally)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { herb, location };\r\n    setSubmittedData(data); // save data to show in QR\r\n    alert(\"‚úÖ Herb logged successfully!\");\r\n    if (onSubmit) onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{ background: '#f8fafc' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"label\" htmlFor=\"herb\">Herb Name</label>\r\n        <input\r\n          id=\"herb\"\r\n          type=\"text\"\r\n          placeholder=\"e.g. Tulsi\"\r\n          value={herb}\r\n          onChange={(e) => setHerb(e.target.value)}\r\n          className=\"input\"\r\n          required\r\n        />\r\n        <div style={{ display: 'flex', gap: 8, alignItems: 'center', marginTop: 12 }}>\r\n          <button type=\"button\" onClick={getLocation} className=\"btn btn-secondary\">Get Location</button>\r\n          {location && <span className=\"muted\">üìç Lat: {location.lat}, Lng: {location.lng}</span>}\r\n        </div>\r\n        <div style={{ marginTop: 12 }}>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Show QR code after submit */}\r\n      {submittedData && (\r\n        <div style={{ marginTop: 16 }}>\r\n          <h3>Generated QR Code:</h3>\r\n          <QRCodeCanvas\r\n            value={JSON.stringify(submittedData)}\r\n            size={200}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FarmerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}