{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\herb-traceability\\\\src\\\\components\\\\FarmerForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\"; // library for QR code\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FarmerForm({\n  onSubmit\n}) {\n  _s();\n  const [herb, setHerb] = useState(\"\");\n  const [location, setLocation] = useState(null);\n  const [submittedData, setSubmittedData] = useState(null);\n\n  // Get GPS location\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      setLocation({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n    });\n  };\n\n  // Submit herb details (no backend, just store locally)\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = {\n      herb,\n      location\n    };\n    setSubmittedData(data); // save data to show in QR\n    alert(\"‚úÖ Herb logged successfully!\");\n    if (onSubmit) onSubmit(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Herb Name\",\n        value: herb,\n        onChange: e => setHerb(e.target.value),\n        className: \"border p-2 m-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: getLocation,\n        className: \"bg-blue-500 text-white px-3 py-1 m-2\",\n        children: \"Get Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), location && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uD83D\\uDCCD Lat: \", location.lat, \", Lng: \", location.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-green-600 text-white px-4 py-2 m-2\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), submittedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: JSON.stringify(submittedData),\n        size: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(FarmerForm, \"FzRRF/bDc0C30HStxvAgLUmxSyE=\");\n_c = FarmerForm;\nexport default FarmerForm;\nvar _c;\n$RefreshReg$(_c, \"FarmerForm\");","map":{"version":3,"names":["React","useState","QRCodeCanvas","jsxDEV","_jsxDEV","FarmerForm","onSubmit","_s","herb","setHerb","location","setLocation","submittedData","setSubmittedData","getLocation","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","handleSubmit","e","preventDefault","data","alert","className","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","JSON","stringify","size","_c","$RefreshReg$"],"sources":["C:/Users/DELL/herb-traceability/src/components/FarmerForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";  // library for QR code\r\n\r\nfunction FarmerForm({ onSubmit }) {\r\n  const [herb, setHerb] = useState(\"\");\r\n  const [location, setLocation] = useState(null);\r\n  const [submittedData, setSubmittedData] = useState(null);\r\n\r\n  // Get GPS location\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      setLocation({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      });\r\n    });\r\n  };\r\n\r\n  // Submit herb details (no backend, just store locally)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { herb, location };\r\n    setSubmittedData(data); // save data to show in QR\r\n    alert(\"‚úÖ Herb logged successfully!\");\r\n    if (onSubmit) onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-100 rounded\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Herb Name\"\r\n          value={herb}\r\n          onChange={(e) => setHerb(e.target.value)}\r\n          className=\"border p-2 m-2\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={getLocation}\r\n          className=\"bg-blue-500 text-white px-3 py-1 m-2\"\r\n        >\r\n          Get Location\r\n        </button>\r\n        {location && <p>üìç Lat: {location.lat}, Lng: {location.lng}</p>}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-green-600 text-white px-4 py-2 m-2\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      {/* Show QR code after submit */}\r\n      {submittedData && (\r\n        <div className=\"mt-4\">\r\n          <h3>Generated QR Code:</h3>\r\n          <QRCodeCanvas\r\n            value={JSON.stringify(submittedData)}\r\n            size={200}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FarmerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}