{"ast":null,"code":"import React,{useState}from\"react\";import{QRCodeCanvas}from\"qrcode.react\";// library for QR code\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FarmerForm(_ref){let{onSubmit}=_ref;const[herb,setHerb]=useState(\"\");const[location,setLocation]=useState(null);const[submittedData,setSubmittedData]=useState(null);// Get GPS location\nconst getLocation=()=>{navigator.geolocation.getCurrentPosition(pos=>{setLocation({lat:pos.coords.latitude,lng:pos.coords.longitude});});};// Submit herb details (no backend, just store locally)\nconst handleSubmit=e=>{e.preventDefault();const data={herb,location};setSubmittedData(data);// save data to show in QR\nalert(\"‚úÖ Herb logged successfully!\");if(onSubmit)onSubmit(data);};return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",style:{background:'#f8fafc'},children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"label\",{className:\"label\",htmlFor:\"herb\",children:\"Herb Name\"}),/*#__PURE__*/_jsx(\"input\",{id:\"herb\",type:\"text\",placeholder:\"e.g. Tulsi\",value:herb,onChange:e=>setHerb(e.target.value),className:\"input\",required:true}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:8,alignItems:'center',marginTop:12},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:getLocation,className:\"btn btn-secondary\",children:\"Get Location\"}),location&&/*#__PURE__*/_jsxs(\"span\",{className:\"muted\",children:[\"\\uD83D\\uDCCD Lat: \",location.lat,\", Lng: \",location.lng]})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:12},children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",children:\"Submit\"})})]}),submittedData&&/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:16},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Generated QR Code:\"}),/*#__PURE__*/_jsx(QRCodeCanvas,{value:JSON.stringify(submittedData),size:200})]})]});}export default FarmerForm;","map":{"version":3,"names":["React","useState","QRCodeCanvas","jsx","_jsx","jsxs","_jsxs","FarmerForm","_ref","onSubmit","herb","setHerb","location","setLocation","submittedData","setSubmittedData","getLocation","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","handleSubmit","e","preventDefault","data","alert","className","style","background","children","htmlFor","id","type","placeholder","value","onChange","target","required","display","gap","alignItems","marginTop","onClick","JSON","stringify","size"],"sources":["C:/Users/DELL/herb-traceability/src/components/FarmerForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { QRCodeCanvas } from \"qrcode.react\";  // library for QR code\r\n\r\nfunction FarmerForm({ onSubmit }) {\r\n  const [herb, setHerb] = useState(\"\");\r\n  const [location, setLocation] = useState(null);\r\n  const [submittedData, setSubmittedData] = useState(null);\r\n\r\n  // Get GPS location\r\n  const getLocation = () => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      setLocation({\r\n        lat: pos.coords.latitude,\r\n        lng: pos.coords.longitude,\r\n      });\r\n    });\r\n  };\r\n\r\n  // Submit herb details (no backend, just store locally)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const data = { herb, location };\r\n    setSubmittedData(data); // save data to show in QR\r\n    alert(\"‚úÖ Herb logged successfully!\");\r\n    if (onSubmit) onSubmit(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\" style={{ background: '#f8fafc' }}>\r\n      <form onSubmit={handleSubmit}>\r\n        <label className=\"label\" htmlFor=\"herb\">Herb Name</label>\r\n        <input\r\n          id=\"herb\"\r\n          type=\"text\"\r\n          placeholder=\"e.g. Tulsi\"\r\n          value={herb}\r\n          onChange={(e) => setHerb(e.target.value)}\r\n          className=\"input\"\r\n          required\r\n        />\r\n        <div style={{ display: 'flex', gap: 8, alignItems: 'center', marginTop: 12 }}>\r\n          <button type=\"button\" onClick={getLocation} className=\"btn btn-secondary\">Get Location</button>\r\n          {location && <span className=\"muted\">üìç Lat: {location.lat}, Lng: {location.lng}</span>}\r\n        </div>\r\n        <div style={{ marginTop: 12 }}>\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Show QR code after submit */}\r\n      {submittedData && (\r\n        <div style={{ marginTop: 16 }}>\r\n          <h3>Generated QR Code:</h3>\r\n          <QRCodeCanvas\r\n            value={JSON.stringify(submittedData)}\r\n            size={200}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FarmerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}